EIGEN_INC=../external/eigen
BOOST_INC=../external
GCC_LIB=/usr/local/lib/gcc/8/
MKL_INC=${MKLROOT}/include
MKL_LIB=${MKLROOT}/lib
NO_AS_NEEDED=
#MKL_LIB=${MKLROOT}/lib/intel64
#NO_AS_NEEDED=-Wl,--no-as-needed
SIMD=4

#CXX=icpc
#CXXFLAGS=-xHost -O3 -g -DDATA_WIDTH=${SIMD} -qopenmp -std=c++17 -w2 -I${MKL_INC} -I${EIGEN_INC} -I${BOOST_INC} -DMKL_INT=long
#LDLIBSOPTIONS=-qopenmp -L${MKL_LIB} -Wl,-rpath,'${MKL_LIB}' -lmkl_core -lmkl_intel_thread -lmkl_intel_ilp64

CXX=g++
CXXFLAGS=-fopenmp -O3 -ffast-math -g -std=c++17 -DDATA_WIDTH=${SIMD} -Wall -Wshadow -I${MKL_INC} -I${EIGEN_INC} -I${BOOST_INC} -DMKL_INT=long
LDLIBSOPTIONS=-fopenmp -L${MKL_LIB} -Wl,-rpath,'${MKL_LIB}' ${NO_AS_NEEDED} -lmkl_intel_ilp64 -lmkl_core -lmkl_intel_thread -liomp5 -L${GCC_LIB} -Wl,-rpath,'${GCC_LIB}' -lstdc++fs

#########################DO NOT MODIFY BELOW THIS LINE##########################
################################################################################
# sources, objects, and headers of the lib
LIB_CPP = $(shell find ../src/ -name \*.cpp -print)
LIB_H = $(shell find ../include/besthea/ -name \*.hpp -print)
LIBFMM_A = ../lib/libbesthea.a

DIRECTORY = $(wildcard */)

TEST_CPP = $(shell find . \( -name \*.cpp ! -name \*catch\* \) -print)
TEST_H = $(shell find . -name \*.h -print)
EXECUTABLES = $(TEST_CPP:./%.cpp=%.exe)
DEPFILES = $(TEST_CPP:./%.cpp=%.o.d)
CATCH_CPP = $(shell find ./catch -name \*catch\*test*.cpp -print)

COMPILELINE=${CXX} ${CXXFLAGS} -I../include -c

OBJECTDIR=build

all: ${LIBFMM_A} ${EXECUTABLES} ${TEST_CPP} ${TEST_H} catch

%.o: %.cpp ${LIBFMM_A}
	rm -f "$@.d"
	${COMPILELINE} -MMD -MP -MF "$@.d" -MT"$(<:%.cpp=%.exe)" -o $@ $<

%.exe: %.o
	$(CXX) -o $@ $< -L../lib -lbesthea ${LDLIBSOPTIONS}

${LIBFMM_A}: ${LIB_CPP} ${LIB_H}
	@echo generating lib
	@cd .. ; $(MAKE) lib/libbesthea.a

catch: ./catch/catch_mpi_main.o
	${CXX} ${CXXFLAGS} -o ./catch/catch_test.exe ./catch/catch_mpi_main.o ${CATCH_CPP} -L../lib -lbesthea  ${LDLIBSOPTIONS}  -I../include

./catch/catch_mpi_main.o: ./catch/catch_mpi_main.cpp ${LIBFMM_A}
	${COMPILELINE} ./catch/catch_mpi_main.cpp -o ./catch/catch_mpi_main.o

clean:
	$(foreach sd,${DIRECTORY}, rm -f ${sd}*.o.d;)
	$(foreach sd,${DIRECTORY}, rm -f ${sd}*.o;)

distclean: clean
	$(foreach sd,${DIRECTORY}, rm -f ${sd}*.exe)

help:
	@echo "This makefile supports the following targets:"
	@echo "    all  (default target, builds static library)"
	@echo "    clean"
	@echo "    distclean"
	@echo "    help"

-include ${DEPFILES}
